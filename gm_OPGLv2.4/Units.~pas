unit Units;

interface

uses SysUtils, Windows, Graphics,Math,OpenGL,Weapons,Bullets,ProthoUnit;





type

 TUserUnit = class(TProthoUnit)                  //класс главного героя
 Public
    FWeapon : TWeapons;                             //тип оружия
 
    constructor Create(X,Y:single);            //создание
    procedure Move(c:char);reintroduce;        //движение
    function Firing(target:TSingPoint; var arrBul:TArrBul):byte;       //стрельба


 end;


 TEnemy = class(TProthoUnit)                              //класс враг
 Private
    FUnic:single;                                       //уникальность поведения
    FEat:boolean;                                       //условие укуса
 Public
    constructor Create(X,Y:single);                     //создание врага
    function IsEat():boolean;                           //проверка на доступность для укуса
    procedure Move(const center:TSingPoint);reintroduce;    //движение врага
 end;







                     //массив указателей на образы
implementation






{UserUnit}
constructor TUserUnit.Create(X,Y:single);
begin
inherited Create(X,Y);
FIndex:=0;
FKolKadr:=1;
FSpeed:=0.01;
FSize:=0.07;
FLife:=100000000;
FWeapon:=TPistol.Create();
FColor:=$00aa5555;
FAngle:=0.0;
InitBmp(1,1);
InitBmp(2,32);
InitBmp(3,1);
InitBmp(4,4);
InitBmp(5,10);
FRefBmp:=@UserBmp;
end;

function TUserUnit.Firing(target:TSingPoint; var arrBul:TArrBul):byte;
begin

result:=FWeapon.Shoot(Location,target,arrBul);
end;



procedure TUserUnit.Move(c:char);
begin

if c='r' then  SetLocation(Location.X+FSpeed,Location.Y);
if c='d' then  SetLocation(Location.X,Location.Y-FSpeed);
if c='u' then  SetLocation(Location.X,Location.Y+FSpeed);
if c='l' then  SetLocation(Location.X-FSpeed,Location.Y);


end;



{Enemy}
constructor TEnemy.Create(X,Y:single);
begin
inherited Create(X,Y);
FIndex:=0;
FUnic:=randg(0.5,0.1)/16;
FKolKadr:=32;
FSpeed:=0.005+random/500;
FSize:=0.06;
FPower:=1;
FLife:=19;
FEat:=false;
FColor:=$0055FF55;
FAngle:=0.0;
FRefBmp:=@EnemyBmp;
end;

Function TEnemy.IsEat():boolean;
begin
result:=FEat;
end;

procedure TEnemy.Move(const center:TSingPoint);
var newX,newY:extended; newAngle:single;
begin
if FDeath then exit;
newAngle:=FindAngle(Location,center);
if (abs(newAngle-Angle)<0.05)or(abs(newAngle-Angle)>6.2) then Angle:=newAngle+FUnic else Angle:=Angle+FUnic;
if (abs(Location.X-center.X)<Size+0.04)
    and
   (abs(Location.Y-center.Y)<Size+0.04)
  then FEat:=true
  else  FEat:=False;

SinCos(angle,newY,newX);
newX:=Location.X + newX*FSpeed;
newY:=Location.Y - newY*FSpeed;
SetLocation(newX,newY);


end;



end.
